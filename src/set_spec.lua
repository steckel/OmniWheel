local Set = require('set')

describe("set", function()
  describe("Set", function()

    describe(":New", function()
      it("doesn't blow up", function()
        assert.has_no.errors(function()
          Set:New()
        end)
      end)
    end)

    describe(":Count", function()
      it("returns the count of items held within", function()
        local set = Set:New()
        assert.are.equals(0, set:Count())
        set:Insert("a")
        assert.are.equals(1, set:Count())
        set:Insert("b")
        assert.are.equals(2, set:Count())
        set:Insert("c")
        assert.are.equals(3, set:Count())
        local tab = {thing="thing"}
        set:Insert(tab)
        assert.are.equals(4, set:Count())
        set:Remove(tab)
        assert.are.equals(3, set:Count())
        set:Remove("c")
        assert.are.equals(2, set:Count())
        set:Remove("b")
        assert.are.equals(1, set:Count())
        set:Remove("a")
        assert.are.equals(0, set:Count())
      end)
    end)

    describe(":Insert", function()
      it("inserts an item into the set", function()
        local set = Set:New()
        assert.are.equals(0, set:Count())
        assert.is_false(set:Contains(1))

        assert.has_no.errors(function()
          set:Insert(1)
        end)

        assert.are.equals(1, set:Count())
        assert.is_true(set:Contains(1))

        assert.has_no.errors(function()
          set:Insert(1)
        end)

        assert.are.equals(1, set:Count())
      end)
    end)

    describe(":Remove", function()
      it("removes items from the Set", function()
        local set = Set:New()
        assert.are.equals(0, set:Count())
        assert.is_false(set:Contains(1))
        set:Insert(1)
        assert.are.equals(1, set:Count())
        assert.is_true(set:Contains(1))

        assert.has_no.errors(function()
          set:Remove(1)
        end)

        assert.are.equals(0, set:Count())
        assert.is_false(set:Contains(1))

        assert.has_no.errors(function()
          set:Remove(1)
        end)
        assert.are.equals(0, set:Count())
      end)
    end)

    describe(":Contains", function()
      it("returns whether a value is present", function()
        local set = Set:New()
        set:Insert("a")
        assert.are.equals(true, set:Contains("a"))
        assert.are.equals(false, set:Contains("b"))
      end)
    end)

    describe(":Values", function()
      pending("it is iterable...", function() end)
    end)

  end)
end)
